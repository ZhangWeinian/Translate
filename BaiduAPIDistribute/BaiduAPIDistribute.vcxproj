<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>17.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{4678e104-cfa9-486c-a7c0-7920abf7289a}</ProjectGuid>
    <RootNamespace>BaiduAPIDistribute</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>build\$(PlatformShortName)\$(Configuration)\</OutDir>
    <IntDir>work\$(PlatformShortName)\$(Configuration)\</IntDir>
    <TargetName>distribute</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>build\$(PlatformShortName)\$(Configuration)\</OutDir>
    <IntDir>work\$(PlatformShortName)\$(Configuration)\</IntDir>
    <TargetName>distribute</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>build\$(PlatformShortName)\$(Configuration)\</OutDir>
    <IntDir>work\$(PlatformShortName)\$(Configuration)\</IntDir>
    <TargetName>distribute</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>build\$(PlatformShortName)\$(Configuration)\</OutDir>
    <IntDir>work\$(PlatformShortName)\$(Configuration)\</IntDir>
    <TargetName>distribute</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>echo ------ 开始执行生成事件(生成后事件) ------
@set source=BaiduAPI
@set target=BaiduAPITest
echo 复制到 '%target%'
echo 复制 %source% 生成的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)baidu.dll" "..\%target%\$(outdir)" /y /i
echo 复制 %source% 引入的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)*.dll" "..\%target%\$(outdir)" /y /i /d
@set target=CommandTranslate
echo 复制到 '%target%'
echo 复制 %source% 生成的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)baidu.dll" "..\%target%\$(outdir)" /y /i
echo 复制 %source% 引入的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)*.dll" "..\%target%\$(outdir)" /y /i /d
@set target=
echo  ------ 生成事件(生成后事件)完成 ------</Command>
      <Message>按不同策略，复制 BaiduAPI 项目所有必要的 dll 文件到指定目录</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>echo ------ 开始执行生成事件(生成后事件) ------
@set source=BaiduAPI
@set target=BaiduAPITest
echo 复制到 '%target%'
echo 复制 %source% 生成的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)baidu.dll" "..\%target%\$(outdir)" /y /i
echo 复制 %source% 引入的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)*.dll" "..\%target%\$(outdir)" /y /i /d
@set target=CommandTranslate
echo 复制到 '%target%'
echo 复制 %source% 生成的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)baidu.dll" "..\%target%\$(outdir)" /y /i
echo 复制 %source% 引入的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)*.dll" "..\%target%\$(outdir)" /y /i /d
@set target=
echo  ------ 生成事件(生成后事件)完成 ------</Command>
      <Message>按不同策略，复制 BaiduAPI 项目所有必要的 dll 文件到指定目录</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>echo ------ 开始执行生成事件(生成后事件) ------
@set source=BaiduAPI
@set target=BaiduAPITest
echo 复制到 '%target%'
echo 复制 %source% 生成的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)baidu.dll" "..\%target%\$(outdir)" /y /i
echo 复制 %source% 引入的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)*.dll" "..\%target%\$(outdir)" /y /i /d
@set target=CommandTranslate
echo 复制到 '%target%'
echo 复制 %source% 生成的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)baidu.dll" "..\%target%\$(outdir)" /y /i
echo 复制 %source% 引入的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)*.dll" "..\%target%\$(outdir)" /y /i /d
@set target=
echo  ------ 生成事件(生成后事件)完成 ------</Command>
      <Message>按不同策略，复制 BaiduAPI 项目所有必要的 dll 文件到指定目录</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>echo ------ 开始执行生成事件(生成后事件) ------
@set source=BaiduAPI
@set target=BaiduAPITest
echo 复制到 '%target%'
echo 复制 %source% 生成的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)baidu.dll" "..\%target%\$(outdir)" /y /i
echo 复制 %source% 引入的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)*.dll" "..\%target%\$(outdir)" /y /i /d
@set target=CommandTranslate
echo 复制到 '%target%'
echo 复制 %source% 生成的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)baidu.dll" "..\%target%\$(outdir)" /y /i
echo 复制 %source% 引入的 dll 文件到 %target%
xcopy "..\%source%\$(outdir)*.dll" "..\%target%\$(outdir)" /y /i /d
@set target=
echo  ------ 生成事件(生成后事件)完成 ------</Command>
      <Message>按不同策略，复制 BaiduAPI 项目所有必要的 dll 文件到指定目录</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ProjectReference Include="..\BaiduAPI\BaiduAPI.vcxproj">
      <Project>{4ec8e437-c310-436a-87e1-88ef7708537c}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>